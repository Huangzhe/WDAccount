package com.sh.lynn.huang.wdaccount.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.sh.lynn.huang.wdaccount.been.Platform;
import com.sh.lynn.huang.wdaccount.been.MoneyRecord;
import com.sh.lynn.huang.wdaccount.been.InvestRecord;
import com.sh.lynn.huang.wdaccount.been.BankCardRecord;
import com.sh.lynn.huang.wdaccount.been.BankCard;

import com.sh.lynn.huang.wdaccount.dao.PlatformDao;
import com.sh.lynn.huang.wdaccount.dao.MoneyRecordDao;
import com.sh.lynn.huang.wdaccount.dao.InvestRecordDao;
import com.sh.lynn.huang.wdaccount.dao.BankCardRecordDao;
import com.sh.lynn.huang.wdaccount.dao.BankCardDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig platformDaoConfig;
    private final DaoConfig moneyRecordDaoConfig;
    private final DaoConfig investRecordDaoConfig;
    private final DaoConfig bankCardRecordDaoConfig;
    private final DaoConfig bankCardDaoConfig;

    private final PlatformDao platformDao;
    private final MoneyRecordDao moneyRecordDao;
    private final InvestRecordDao investRecordDao;
    private final BankCardRecordDao bankCardRecordDao;
    private final BankCardDao bankCardDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        platformDaoConfig = daoConfigMap.get(PlatformDao.class).clone();
        platformDaoConfig.initIdentityScope(type);

        moneyRecordDaoConfig = daoConfigMap.get(MoneyRecordDao.class).clone();
        moneyRecordDaoConfig.initIdentityScope(type);

        investRecordDaoConfig = daoConfigMap.get(InvestRecordDao.class).clone();
        investRecordDaoConfig.initIdentityScope(type);

        bankCardRecordDaoConfig = daoConfigMap.get(BankCardRecordDao.class).clone();
        bankCardRecordDaoConfig.initIdentityScope(type);

        bankCardDaoConfig = daoConfigMap.get(BankCardDao.class).clone();
        bankCardDaoConfig.initIdentityScope(type);

        platformDao = new PlatformDao(platformDaoConfig, this);
        moneyRecordDao = new MoneyRecordDao(moneyRecordDaoConfig, this);
        investRecordDao = new InvestRecordDao(investRecordDaoConfig, this);
        bankCardRecordDao = new BankCardRecordDao(bankCardRecordDaoConfig, this);
        bankCardDao = new BankCardDao(bankCardDaoConfig, this);

        registerDao(Platform.class, platformDao);
        registerDao(MoneyRecord.class, moneyRecordDao);
        registerDao(InvestRecord.class, investRecordDao);
        registerDao(BankCardRecord.class, bankCardRecordDao);
        registerDao(BankCard.class, bankCardDao);
    }
    
    public void clear() {
        platformDaoConfig.getIdentityScope().clear();
        moneyRecordDaoConfig.getIdentityScope().clear();
        investRecordDaoConfig.getIdentityScope().clear();
        bankCardRecordDaoConfig.getIdentityScope().clear();
        bankCardDaoConfig.getIdentityScope().clear();
    }

    public PlatformDao getPlatformDao() {
        return platformDao;
    }

    public MoneyRecordDao getMoneyRecordDao() {
        return moneyRecordDao;
    }

    public InvestRecordDao getInvestRecordDao() {
        return investRecordDao;
    }

    public BankCardRecordDao getBankCardRecordDao() {
        return bankCardRecordDao;
    }

    public BankCardDao getBankCardDao() {
        return bankCardDao;
    }

}
