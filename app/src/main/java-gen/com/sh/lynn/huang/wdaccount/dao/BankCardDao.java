package com.sh.lynn.huang.wdaccount.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.sh.lynn.huang.wdaccount.been.BankCard;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BANK_CARD".
*/
public class BankCardDao extends AbstractDao<BankCard, Void> {

    public static final String TABLENAME = "BANK_CARD";

    /**
     * Properties of entity BankCard.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property CardNum = new Property(0, String.class, "cardNum", false, "CARD_NUM");
        public final static Property Money = new Property(1, String.class, "money", false, "MONEY");
        public final static Property BankName = new Property(2, String.class, "bankName", false, "BANK_NAME");
        public final static Property BillDate = new Property(3, Integer.class, "billDate", false, "BILL_DATE");
        public final static Property RepaymentDate = new Property(4, Integer.class, "repaymentDate", false, "REPAYMENT_DATE");
        public final static Property CardType = new Property(5, Integer.class, "cardType", false, "CARD_TYPE");
    };


    public BankCardDao(DaoConfig config) {
        super(config);
    }
    
    public BankCardDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"BANK_CARD\" (" + //
                "\"CARD_NUM\" TEXT NOT NULL ," + // 0: cardNum
                "\"MONEY\" TEXT," + // 1: money
                "\"BANK_NAME\" TEXT," + // 2: bankName
                "\"BILL_DATE\" INTEGER," + // 3: billDate
                "\"REPAYMENT_DATE\" INTEGER," + // 4: repaymentDate
                "\"CARD_TYPE\" INTEGER);"); // 5: cardType
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"BANK_CARD\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, BankCard entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getCardNum());
 
        String money = entity.getMoney();
        if (money != null) {
            stmt.bindString(2, money);
        }
 
        String bankName = entity.getBankName();
        if (bankName != null) {
            stmt.bindString(3, bankName);
        }
 
        Integer billDate = entity.getBillDate();
        if (billDate != null) {
            stmt.bindLong(4, billDate);
        }
 
        Integer repaymentDate = entity.getRepaymentDate();
        if (repaymentDate != null) {
            stmt.bindLong(5, repaymentDate);
        }
 
        Integer cardType = entity.getCardType();
        if (cardType != null) {
            stmt.bindLong(6, cardType);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public BankCard readEntity(Cursor cursor, int offset) {
        BankCard entity = new BankCard( //
            cursor.getString(offset + 0), // cardNum
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // money
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // bankName
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // billDate
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // repaymentDate
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5) // cardType
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, BankCard entity, int offset) {
        entity.setCardNum(cursor.getString(offset + 0));
        entity.setMoney(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBankName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBillDate(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setRepaymentDate(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setCardType(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(BankCard entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(BankCard entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
